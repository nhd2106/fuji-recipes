generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URL")
}

model User {
    id               String     @id @default(auto()) @map("_id") @db.ObjectId
    email            String     @unique
    createdAt        DateTime   @default(now())
    updatedAt        DateTime   @updatedAt
    kindeId          String     @unique
    family_name      String
    given_name       String
    likedRecipes     Like[]
    favoritedRecipes Favorite[]
    picture          String?
    credits          Float?     @default(5)
}

model Recipe {
    id                  String   @id @default(auto()) @map("_id") @db.ObjectId
    name                String
    description         String?
    cameraModel         String?
    filmSimulation      String?
    grainEffect         String?
    colorChromeEffect   String?
    colorChromeFxBlue   String?
    monochrommaticColor String?
    whiteBalance        String?
    dynamicRange        String?
    toneCurve           String?
    color               String?
    sharpness           String?
    noiseReduction      String?
    clarity             String?
    isoLimit            String?
    exposureComp        String?
    mainImageId         String?
    dRangePriority      String?
    colorSpace          String?
    createdAt           DateTime @default(now())
    updatedAt           DateTime @updatedAt
    images              String?
    userId              String
    mainImage           String?
    email               String?
    likes               Float?
    favorites           Float?
    category            String?
}

model ImageKitImage {
    fileId       String   @id @map("_id")
    url          String // Access URL provided by ImageKit
    filePath     String // Path in ImageKit storage
    thumbnailUrl String? // Optional thumbnail URL
    title        String?
    caption      String?
    createdAt    DateTime @default(now())
    name         String
    recipeId     String?
    fileType     String
    height       Int
    width        Int
    orientation  Int?
}

model Like {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String
    recipeId  String
    createdAt DateTime @default(now())
    User      User     @relation(fields: [userId], references: [id])
}

model Favorite {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String
    recipeId  String
    createdAt DateTime @default(now())
    User      User     @relation(fields: [userId], references: [id])
}

// create reply model of comment
model Reply {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String
    commentId String
    content   String
    createdAt DateTime @default(now())
    Comment   Comment  @relation(fields: [commentId], references: [id])
    likes     Float?
}

// create comment model of recipe and reply
model Comment {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String
    recipeId  String
    content   String
    createdAt DateTime @default(now())
    replies   Reply[]
    likes     Float?
}
